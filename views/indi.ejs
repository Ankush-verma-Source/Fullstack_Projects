<% layout('layouts/boilerplate') %>
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Questiva</title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
      @import url("https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap");

      /* * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
      } */

      body {
        font-family: "Inter", sans-serif;
        background-color: #f5f7fa;
        color: #1e293b;
        line-height: 1.6;
      }

      @keyframes fadeIn {
        from {
          opacity: 0;
        }
        to {
          opacity: 1;
        }
      }

      @keyframes fadeInUp {
        from {
          opacity: 0;
          transform: translateY(20px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .app-container {
        width: 100%;
        max-width: 1200px;
        margin: 3rem auto;
        background: white;
        border-radius: 16px;
        box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        /* animation: fadeIn 0.5s ease forwards; */
        transform: translateY(20px);
        opacity: 0;
        animation: fadeInUp 0.5s ease forwards;
        animation-delay: 0.2s;
      }

      .app-header {
        background: linear-gradient(135deg, #6366f1, #8b5cf6);
        padding: 1.5rem 1rem;
        text-align: center;
        color: white;
        position: relative;
        overflow: hidden;
      }

      .app-header h1 {
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 0.25rem;
        position: relative;
        z-index: 2;
      }

      .app-header p {
        font-size: 1rem;
        opacity: 0.9;
        position: relative;
        z-index: 2;
      }

      .search-section {
        display: flex;
        justify-content: center;
        padding: 1rem;
      }

      .search-container {
        display: flex;
        align-items: center;
        margin-right: auto;
        padding: 0.5rem 1rem;
        background: #f1f5f9;
        border-radius: 20px;
        margin: 0.5rem;
      }
      /* new - avialable */
      .search-container i {
        color: #64748b;
        margin-right: 0.5rem;
      }
      /* changes - available  */
      .search-container input {
        border: none;
        background: transparent;
        outline: none;
        min-width: 300px;
        font-size: 1rem;
      }

      #features-main {
        display: flex;
        flex-wrap: nowrap;
        gap: 0.5rem;
        padding: 0.25rem;
        margin-bottom: 0.5rem;
        overflow-x: auto;
        scrollbar-width: thin;
        -webkit-overflow-scrolling: touch;
        white-space: nowrap;
        scroll-snap-type: x mandatory;
        scroll-padding: 0.5rem;
      }

      .feature-card {
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 0.75rem;
        background: white;
        border-radius: 8px;
        transition: transform 0.2s;
        cursor: pointer;
        flex: 0 0 auto;
        min-width: 150px;
        scroll-snap-align: start;
      }
      .feature-card.active {
        background-color: #f0f4ff;
        box-shadow: 0 0 0 2px #6366f1;
      }
      .feature-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
      }

      .feature-icon {
        font-size: 0.9rem;
        color: #6366f1;
        margin-bottom: 0.15rem;
      }

      .feature-title {
        font-weight: 500;
        font-size: 0.7rem;
        text-align: center;
      }

      .tab-button {
        padding: 1.2rem 1.5rem;
        font-size: 1rem;
        font-weight: 500;
        color: #64748b;
        background: none;
        border: none;
        cursor: pointer;
        position: relative;
        transition: all 0.3s ease;
      }

      .tab-button:hover {
        color: #6366f1;
      }

      .tab-button.active {
        color: #6366f1;
        font-weight: 600;
      }

      .tab-button.active::after {
        content: "";
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 3px;
        background: #6366f1;
      }

      .content-section {
        padding: 1.5rem;
        min-height: 500px;
        background: #f8fafc;
      }

      /* main feature card :  added from previous */
      .feature-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        /* padding: 2.5rem; */
        /* max-width: 800px; */
        margin: 0 auto;
        animation: fadeInUp 0.6s ease forwards;
      }
      .feature-card h2 {
        font-size: 1.5rem;
        font-weight: 600;
        margin-bottom: 1.5rem;
        color: #1e293b;
      }

      .upload-section {
        display: flex;
        flex-direction: column;
        align-items: center;
      }

      .upload-prompt {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        font-size: 1.1rem;
        color: #64748b;
        margin-bottom: 2rem;
      }

      .drop-area {
        width: 100%;
        border: 2px dashed #cbd5e1;
        border-radius: 10px;
        padding: 2.5rem;
        text-align: center;
        cursor: pointer;
        transition: all 0.3s ease;
        margin-bottom: 2rem;
      }

      .drop-area:hover {
        border-color: #6366f1;
        background-color: #f5f7ff;
      }

      .drop-area.dragover {
        border-color: #6366f1;
        background-color: #f0f4ff;
      }

      .drop-area p {
        font-size: 1rem;
        color: #64748b;
      }

      .file-info {
        margin-top: 1rem;
        font-size: 0.9rem;
        color: #64748b;
      }

      .form-group {
        margin-bottom: 1.5rem;
        width: 100%;
      }

      .form-group label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 500;
        color: #334155;
      }

      .form-group input[type="number"],
      .form-group select {
        width: 100%;
        padding: 0.875rem 1rem;
        border: 1px solid #e2e8f0;
        border-radius: 8px;
        font-size: 1rem;
        transition: border-color 0.3s ease;
      }

      .form-group input[type="number"]:focus,
      .form-group select:focus {
        outline: none;
        border-color: #6366f1;
        box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
      }

      .btn {
        padding: 0.875rem 1.75rem;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        border: none;
      }

      .btn-primary {
        background-color: #6366f1;
        color: white;
      }

      .btn-primary:hover {
        background-color: #4f46e5;
      }

      .btn-secondary {
        background-color: #e2e8f0;
        color: #334155;
      }

      .btn-secondary:hover {
        background-color: #cbd5e1;
      }

      .btn-group {
        display: flex;
        gap: 1rem;
        margin-top: 1.5rem;
      }

      .hidden {
        display: none !important;
      }

      @media (max-width: 768px) {
        .search-container {
          margin: 0.5rem auto;
          order: -1;
          width: 100%;
        }

        .content-section {
          padding: 1.5rem;
        }

        .feature-card {
          padding: 1.5rem;
        }

        .btn-group {
          flex-direction: column;
        }

        .btn {
          width: 100%;
        }
      }
    </style>
  </head>
  <body>
    <div class="app-container">
      <div class="app-header">
        <h1>Welcome to Questiva</h1>
        <p>Your AI-powered learning assistant</p>
      </div>

      <div class="search-section">
        <div class="search-container">
          <i class="fas fa-search"></i>
          <input
            type="text"
            id="tab-search"
            placeholder="Search all features..."
            oninput="filterFeatures()"
          />
        </div>
      </div>

      <div class="features-grid" id="features-main">
        <div class="feature-card" onclick="openTab(event, 'generate')">
          <div class="feature-icon">
            <i class="fas fa-question-circle"></i>
          </div>
          <div class="feature-title">Generate MCQs</div>
        </div>
        <div class="feature-card" onclick="openTab(event, 'flashcards')">
          <div class="feature-icon">
            <i class="fas fa-layer-group"></i>
          </div>
          <div class="feature-title">Flashcards</div>
        </div>
        <div class="feature-card" onclick="openTab(event, 'summaries')">
          <div class="feature-icon">
            <i class="fas fa-file-alt"></i>
          </div>
          <div class="feature-title">Summary Generator</div>
        </div>
        <div class="feature-card" onclick="openTab(event, 'quizzes')">
          <div class="feature-icon">
            <i class="fas fa-list-ol"></i>
          </div>
          <div class="feature-title">Quiz Maker</div>
        </div>
      </div>

      <div class="content-section">
        <!-- Generate MCQs Tab -->
        <div id="generate" class="feature-card">
          <h2 class="text-center">Generate Multiple Choice Questions</h2>
          <div class="upload-section">
            <div class="upload-prompt">
              <i class="fas fa-file-upload"></i>
              Upload your document to generate MCQs
            </div>

            <div
              id="drop-area"
              class="drop-area"
              onclick="document.getElementById('file-upload').click()"
              ondragover="event.preventDefault(); this.classList.add('dragover')"
              ondragleave="this.classList.remove('dragover')"
              ondrop="handleFileDrop(event)"
            >
              <p id="drop-text">
                Drag & drop your file here or click to browse
              </p>
              <div id="file-details" class="file-info hidden"></div>
            </div>
            <input
              type="file"
              id="file-upload"
              class="hidden"
              accept=".txt,.pdf,.doc,.docx,.md"
              onchange="handleFileSelect()"
            />

            <div class="form-group">
              <label for="question-count">Number of Questions:</label>
              <input
                type="number"
                id="question-count"
                name="question-count"
                min="1"
                max="50"
                value="5"
              />
            </div>

            <div class="form-group">
              <label for="difficulty">Difficulty Level:</label>
              <select id="difficulty" name="difficulty">
                <option value="easy">Easy</option>
                <option value="medium" selected>Medium</option>
                <option value="hard">Hard</option>
              </select>
            </div>
            <div class="btn-group">
              <button
                type="button"
                class="btn btn-secondary"
                onclick="resetForm()"
              >
                Reset
              </button>
              <button
                type="button"
                class="btn btn-primary"
                id="generate-btn"
                onclick="generateMCQs()"
              >
                Generate MCQs
              </button>
            </div>
          </div>
        </div>

        <!-- Flashcards Tab (Hidden by default) -->
        <div id="flashcards" class="feature-card hidden">
          <h2>Create Flashcards</h2>
          <div class="upload-section">
            <div class="upload-prompt">
              <i class="fas fa-file-upload"></i>
              Upload your document to create flashcards
            </div>

            <div class="drop-area">
              <p>Drag & drop your file here or click to browse</p>
            </div>

            <div class="form-group">
              <label for="flashcard-difficulty">Difficulty Level:</label>
              <select id="flashcard-difficulty" name="flashcard-difficulty">
                <option value="basic">Basic</option>
                <option value="intermediate" selected>Intermediate</option>
                <option value="advanced">Advanced</option>
              </select>
            </div>

            <div class="btn-group">
              <button type="button" class="btn btn-secondary">Reset</button>
              <button type="button" class="btn btn-primary">
                Create Flashcards
              </button>
            </div>
          </div>
        </div>

        <!-- Summary Generator Tab (Hidden by default) -->
        <div id="summaries" class="feature-card hidden">
          <h2>Generate Document Summary</h2>
          <div class="upload-section">
            <div class="upload-prompt">
              <i class="fas fa-file-upload"></i>
              Upload your document to generate a summary
            </div>

            <div class="drop-area">
              <p>Drag & drop your file here or click to browse</p>
            </div>

            <div class="form-group">
              <label for="summary-length">Summary Length:</label>
              <select id="summary-length" name="summary-length">
                <option value="short">Short (2-3 paragraphs)</option>
                <option value="medium" selected>Medium (4-5 paragraphs)</option>
                <option value="long">Long (6+ paragraphs)</option>
              </select>
            </div>

            <div class="btn-group">
              <button type="button" class="btn btn-secondary">Reset</button>
              <button type="button" class="btn btn-primary">
                Generate Summary
              </button>
            </div>
          </div>
        </div>

        <!-- Quiz Maker Tab (Hidden by default) -->
        <div id="quizzes" class="feature-card hidden">
          <h2>Create Custom Quiz</h2>
          <div class="upload-section">
            <div class="upload-prompt">
              <i class="fas fa-file-upload"></i>
              Upload your document to create a quiz
            </div>

            <div class="drop-area">
              <p>Drag & drop your file here or click to browse</p>
            </div>

            <div class="form-group">
              <label for="quiz-type">Quiz Type:</label>
              <select id="quiz-type" name="quiz-type">
                <option value="multiple-choice">Multiple Choice</option>
                <option value="true-false">True/False</option>
                <option value="short-answer">Short Answer</option>
                <option value="mix" selected>Mix of Types</option>
              </select>
            </div>

            <div class="btn-group">
              <button type="button" class="btn btn-secondary">Reset</button>
              <button type="button" class="btn btn-primary">Create Quiz</button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script>
      function filterFeatures() {
        const searchTerm = document
          .getElementById("tab-search")
          .value.toLowerCase();
        const featureGridCards = document.querySelectorAll(
          "#features-main .feature-card"
        );

        featureGridCards.forEach((card) => {
          const title = card
            .querySelector(".feature-title")
            .textContent.toLowerCase();
          card.style.display = title.includes(searchTerm) ? "flex" : "none";
        });
      }

      function openTab(evt, tabId) {
        document.querySelectorAll(".feature-card").forEach((card) => {
          card.classList.remove("active");
        });
        document
          .querySelectorAll(".content-section > .feature-card")
          .forEach((tab) => {
            tab.classList.add("hidden");
          });
        document.getElementById(tabId).classList.remove("hidden");
        evt.currentTarget.classList.add("active");
      }

      // File upload handling
      function handleFileSelect() {
        const fileInput = document.getElementById("file-upload");
        const fileDetails = document.getElementById("file-details");
        const dropText = document.getElementById("drop-text");
        const generateBtn = document.getElementById("generate-btn");

        if (fileInput.files.length > 0) {
          const file = fileInput.files[0];
          fileDetails.innerHTML = `
                    <p><strong>File:</strong> ${file.name}</p>
                    <p><strong>Size:</strong> ${(file.size / 1024).toFixed(
                      2
                    )} KB</p>
                    <p><strong>Type:</strong> ${
                      file.type || file.name.split(".").pop().toUpperCase()
                    }</p>
                `;
          fileDetails.classList.remove("hidden");
          dropText.classList.add("hidden");
          generateBtn.disabled = false;
        }
      }
      function handleFileDrop(evt) {
        evt.preventDefault();
        document.getElementById("drop-area").classList.remove("dragover");

        const fileInput = document.getElementById("file-upload");
        fileInput.files = evt.dataTransfer.files;
        handleFileSelect();
      }

      function resetForm() {
        document.getElementById("file-upload").value = "";
        document.getElementById("file-details").classList.add("hidden");
        document.getElementById("drop-text").classList.remove("hidden");
        document.getElementById("generate-btn").disabled = true;
      }

      function generateMCQs() {
        const fileInput = document.getElementById("file-upload");
        if (!fileInput.files.length) {
          alert("Please select a file first");
          return;
        }

        const questionCount = document.getElementById("question-count").value;
        const difficulty = document.getElementById("difficulty").value;

        // In a real app, you would send this to your backend
        alert(
          `Generating ${questionCount} ${difficulty} difficulty MCQs from selected file`
        );

        // Here you would typically show a loading state
        // and then display the generated MCQs
      }

      // Initialize - same as window.onload
      document.addEventListener("DOMContentLoaded", () => {
        resetForm();

        // Allow multiple tabs to have pointer events for drag/drop
        document.querySelectorAll(".drop-area").forEach((area) => {
          area.addEventListener("dragover", (e) => {
            e.preventDefault();
            area.classList.add("dragover");
          });

          area.addEventListener("dragleave", () => {
            area.classList.remove("dragover");
          });
        });
      });
    </script>
  </body>
</html>
